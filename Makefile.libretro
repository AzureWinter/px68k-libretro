
DEBUG = 0

ifeq ($(platform),)
platform = unix
ifeq ($(shell uname -a),)
   platform = win
else ifneq ($(findstring Darwin,$(shell uname -a)),)
   platform = osx
else ifneq ($(findstring MINGW,$(shell uname -a)),)
   platform = win
endif
endif

TARGET_NAME := px68k

ifeq ($(platform), unix)
	CC = gcc
	CXX = g++
	CFLAGS = -g -O2 
	CXXFLAGS = -g -O2  -fno-merge-constants 
	TARGET := $(TARGET_NAME)_libretro.so
	fpic := -fPIC
	SHARED := -shared -Wl,--no-undefined -Wl,--version-script=link.T
	ENDIANNESS_DEFINES := -DLSB_FIRST
	FLAGS += -D__LINUX__
# android arm
else ifneq (,$(findstring android,$(platform)))
   	TARGET := $(TARGET_NAME)_libretro_android.so
   	fpic = -fPIC
   	SHARED := -lstdc++ -llog -lz -shared -Wl,--version-script=link.T -Wl,--no-undefined
	CFLAGS +=  -g -O2 
   	CC = arm-linux-androideabi-gcc
   	CXX = arm-linux-androideabi-g++
# cross Windows
else ifeq ($(platform), wincross64)
	TARGET := $(TARGET_NAME)_libretro.dll
	AR = x86_64-w64-mingw32-ar
	CC = x86_64-w64-mingw32-gcc
	CXX = x86_64-w64-mingw32-g++ 
	SHARED := -shared -Wl,--no-undefined -Wl,--version-script=link.T
	LDFLAGS += -static-libgcc -static-libstdc++ 
	ENDIANNESS_DEFINES := -DLSB_FIRST
	FLAGS +=
	EXTRA_LDF := -lwinmm -Wl,--export-all-symbols
else
   	TARGET :=  $(TARGET_NAME)_retro.dll
   	CC = gcc
   	CXX = g++
   	SHARED := -shared -Wl,--no-undefined -Wl,--version-script=link.T
   	LDFLAGS += -static-libgcc -static-libstdc++ 
   	ENDIANNESS_DEFINES := -DLSB_FIRST
   	FLAGS +=
	EXTRA_LDF = -lwinmm -Wl,--export-all-symbols
endif

CDEBUGFLAGS+= -DNO_MERCURY
CDEBUGFLAGS+=-DPX68K_VERSION=0.15
EXTRA_INCLUDES= -I./libretro -I./x68k -I./fmgen -I./win32api
FLAGS += $(CDEBUGFLAGS)

CPUOBJS= x68k/d68k.o m68000/m68000.o
C68KOBJS= m68000/c68k/c68k.o m68000/c68k/c68kexec.o

X68KOBJS= x68k/adpcm.o x68k/bg.o x68k/crtc.o x68k/dmac.o x68k/fdc.o x68k/fdd.o x68k/disk_d88.o x68k/disk_dim.o x68k/disk_xdf.o x68k/gvram.o x68k/ioc.o x68k/irqh.o x68k/mem_wrap.o x68k/mercury.o x68k/mfp.o x68k/palette.o x68k/midi.o x68k/pia.o x68k/rtc.o x68k/sasi.o x68k/scc.o x68k/scsi.o x68k/sram.o x68k/sysport.o x68k/tvram.o
FMGENOBJS= fmgen/fmgen.o fmgen/fmg_wrap.o fmgen/file.o fmgen/fmtimer.o fmgen/opm.o fmgen/opna.o fmgen/psg.o
X11OBJS= libretro/joystick.o libretro/juliet.o libretro/keyboard.o libretro/mouse.o libretro/prop.o libretro/status.o libretro/timer.o libretro/dswin.o libretro/windraw.o libretro/winui.o libretro/about.o libretro/common.o
X11CXXOBJS= libretro/winx68k.o
WIN32APIOBJS= win32api/dosio.o win32api/fake.o win32api/peace.o

OBJECTS := $(X68KOBJS) $(X11OBJS) $(WIN32APIOBJS) $(CPUOBJS)  $(C68KOBJS) $(FMGENOBJS) $(X11CXXOBJS) libretro.o 

all: $(TARGET)

ifeq ($(DEBUG), 0)
   FLAGS += -O3 -ffast-math -fomit-frame-pointer
else
   FLAGS += -O0 -g
endif

LDFLAGS +=  $(fpic) $(SHARED) $(EXTRA_LDF) 
FLAGS += -I. -I..  $(EXTRA_INCLUDES) 

WARNINGS :=  
	
FLAGS += -D__LIBRETRO__ $(ENDIANNESS_DEFINES) $(WARNINGS) $(fpic) 

CXXFLAGS += $(FLAGS) -fpermissive
CFLAGS += $(FLAGS) -std=gnu99

$(TARGET): $(OBJECTS)
	$(CXX) -o $@ $^ $(LDFLAGS)

%.o: %.cpp
	$(CXX) -c -o $@ $< $(CXXFLAGS)

%.o: %.c
	$(CC) -c -o $@ $< $(CFLAGS)

clean:
	rm -f $(TARGET) $(OBJECTS)

.PHONY: clean
